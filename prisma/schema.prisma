// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Products {
  id            String  @id @default(uuid())
  name          String  @unique
  description   String
  serialNumber  String  @unique
  image         String?
  pricePurchase Float
  priceSale     Float

  slug String @unique

  brand   Brands? @relation(fields: [brandId], references: [id])
  brandId String?

  provider   Providers? @relation(fields: [providerId], references: [id])
  providerId Int?

  category   Categories? @relation(fields: [categoryId], references: [id])
  categoryId Int?

  isActive Boolean @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("products")
}

model Brands {
  id          String  @id @default(uuid())
  name        String  @unique
  description String?

  products Products[]
  isActive Boolean    @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("brands")
}

model Categories {
  id   Int    @id @default(autoincrement())
  name String @unique
  slug String @unique

  products Products[]
  isActive Boolean    @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("categories")
}

model Providers {
  id Int @id @default(autoincrement())

  name      String  @unique
  phone1    String? @unique
  phone2    String? @unique
  direction String?

  products Products[]
  isActive Boolean    @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("providers")
}
